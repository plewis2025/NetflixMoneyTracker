public static final String RESET = "\u001B[0m";
public static final String GREEN = "\u001B[32m";
public static final String RED = "\u001B[31m";
public static final String CYAN = "\u001B[36m";
System.out.println(GREEN + "Deposit added!" + RESET);
System.out.println(RED + "Payment added!" + RESET);

public static void showLedger() {
    try {
        List<String> lines = new ArrayList<>(Files.readAllLines(new File(fileName).toPath()));
        Collections.reverse(lines); // newest first

        System.out.println("\n=== LEDGER ===");
        System.out.println("A) All");
        System.out.println("D) Deposits only");
        System.out.println("P) Payments only");
        System.out.print("Choose an option: ");
        String option = scanner.nextLine().toUpperCase();

        for (String line : lines) {
            String[] parts = line.split("\\|"); // break up the line
            double amount = Double.parseDouble(parts[4]); // get the amount

            if (option.equals("A")) {
                System.out.println(line);
            } else if (option.equals("D") && amount > 0) {
                System.out.println(line);
            } else if (option.equals("P") && amount < 0) {
                System.out.println(line);
            }
        }
    } catch (IOException e) {
        System.out.println(" Error reading ledger!");
    }
}
public static void showReports() {
    System.out.println("\n=== REPORTS ===");
    System.out.println("1) Month To Date");
    System.out.println("2) Year To Date");
    System.out.println("5) Search by Vendor");
    System.out.println("0) Back");
    System.out.print("Choose an option: ");
    String choice = scanner.nextLine();

    switch (choice) {
        case "1":
            monthToDate();
            break;
        case "2":
            yearToDate();
            break;
        case "5":
            searchByVendor();
            break;
        case "0":
            return; // go back
    }
}
public static void monthToDate() {
    System.out.println("Showing Month-to-Date transactions...");
    // (Later you can add code to check if date is from this month)
}

public static void yearToDate() {
    System.out.println("Showing Year-to-Date transactions...");
    // (Later you can add code to check if date is from this year)
}
public static void searchByVendor() {
    try {
        System.out.print("Enter vendor name to search: ");
        String vendor = scanner.nextLine().toLowerCase();

        List<String> lines = Files.readAllLines(new File(fileName).toPath());
        for (String line : lines) {
            if (line.toLowerCase().contains(vendor)) {
                System.out.println(line);
            }
        }
    } catch (IOException e) {
        System.out.println(" Error searching by vendor!");
    }
}
